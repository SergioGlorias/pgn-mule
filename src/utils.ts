import request from 'request';
import { Game, ChildNode, parsePgn, makePgn } from 'chessops/pgn';
import { promisify } from 'util';

export interface Source {
  url: string;
  name: string;
  updateFreqSeconds: number;
  delaySeconds: number;
  dateLastPolled: Date;
  dateLastUpdated: Date;
}

export const sourceHttpTimeout = 10 * 1000;

// TODO: use from chessops once merged https://github.com/niklasf/chessops/pull/165
export const extendMainline = <T>(game: Game<T>, data: T[]) => {
  let node = game.moves;
  while (node.children.length) {
    const child = node.children[0];
    node = child;
  }
  data.forEach(d => {
    const newNode = new ChildNode(d);
    node.children = [newNode];
    node = newNode;
  });
};

export class Headers {
  constructor(
    public inner: Map<string, string>,
    public context?: string,
  ) {}
  set = (key: string, value: string | number) => {
    // this is because types are not correct, as we typed the JSON returned by external APIs
    if (value) {
      if (typeof value === 'number') value = value.toString();
      this.inner.set(key, value);
    } else {
      console.log(
        `Missing ${key} in headers${this.context ? ` for ${this.context}` : ''}`,
      );
    }
  };
}

export const emptyHeaders = (context?: string) =>
  new Headers(new Map(), context);

export function notEmpty<TValue>(
  value: TValue | null | undefined,
): value is TValue {
  return value !== null && value !== undefined;
}

export function envOr(name: string, defaultValue: string): string {
  const token = process.env[name];
  if (token === undefined) return defaultValue;
  return token;
}

export function envOrDie(name: string): string {
  const token = process.env[name];
  if (token === undefined) {
    console.error(`${name} must be defined as an environment variable`);
    process.exit();
  }
  return token;
}

export interface Replacement {
  oldContent: string;
  newContent: string;
  regex?: boolean;
}

export type Replacements = Replacement[];

export const dbg = <T>(v: T) => {
  console.log(v);
  return v;
};

// only for chess960 starting fens
export function toShredder(fen: string) {
  return fen
    .replace(/(\/\w\w\w\w\wR\wR w) KQkq/g, '$1 HFhf')
    .replace(/(\/\w\w\w\wR\w\wR w) KQkq/g, '$1 HEhe')
    .replace(/(\/\w\w\w\wR\wR\w w) KQkq/g, '$1 GEge')
    .replace(/(\/\w\w\wR\w\w\wR w) KQkq/g, '$1 HDhd')
    .replace(/(\/\w\w\wR\w\wR\w w) KQkq/g, '$1 GDgd')
    .replace(/(\/\w\w\wR\wR\w\w w) KQkq/g, '$1 FDfd')
    .replace(/(\/\w\wR\w\w\w\wR w) KQkq/g, '$1 HChc')
    .replace(/(\/\w\wR\w\w\wR\w w) KQkq/g, '$1 GCgc')
    .replace(/(\/\w\wR\w\wR\w\w w) KQkq/g, '$1 FCfc')
    .replace(/(\/\w\wR\wR\w\w\w w) KQkq/g, '$1 ECec')
    .replace(/(\/\wR\w\w\w\w\wR w) KQkq/g, '$1 HBhb')
    .replace(/(\/\wR\w\w\w\wR\w w) KQkq/g, '$1 GBgb')
    .replace(/(\/\wR\w\w\wR\w\w w) KQkq/g, '$1 FBfb')
    .replace(/(\/\wR\w\wR\w\w\w w) KQkq/g, '$1 EBeb')
    .replace(/(\/\wR\wR\w\w\w\w w) KQkq/g, '$1 DBdb')
    .replace(/(\/R\w\w\w\w\w\wR w) KQkq/g, '$1 HAha')
    .replace(/(\/R\w\w\w\w\wR\w w) KQkq/g, '$1 GAga')
    .replace(/(\/R\w\w\w\wR\w\w w) KQkq/g, '$1 FAfa')
    .replace(/(\/R\w\w\wR\w\w\w w) KQkq/g, '$1 EAea')
    .replace(/(\/R\w\wR\w\w\w\w w) KQkq/g, '$1 DAda')
    .replace(/(\/R\wR\w\w\w\w\w w) KQkq/g, '$1 CAca');
}

const splitRegex = /\n\n(?=\[)/;
export function splitGames(multiPgn: string): string[] {
  return multiPgn.replace(/\r/g, '').split(splitRegex);
}

// chess 24 round numbers.
export function chess24Rounds(pgns: string[], roundbase: string): string[] {
  return pgns.map((pgn, i) => {
    const games = parsePgn(pgn);
    if (games.length) {
      const game = games[0];
      game.headers.set('Round', roundbase.replace('{}', (i + 1).toString()));
      return makePgn(game);
    } else return pgn;
  });
}

export function filterGames(
  pgns: string[],
  roundQuery?: string | string[],
  sliceQuery?: string | string[],
): string[] {
  const rounds = parseRoundsQuery(roundQuery);
  const groups: string[][] = Array.from(Array(rounds?.length || 1), () => []);
  for (const pgn of pgns) {
    if (pgn.includes('[White "bye"]') || pgn.includes('[Black "bye"]'))
      continue;

    if (rounds) {
      const match = pgn.match(/\[Round "(\d+)(?:\.(\d+))?"/);
      if (!match) continue;
      const round = parseInt(match[1]);
      const board = match[2] ? parseInt(match[2]) : undefined;
      for (const [i, [filterRound, filterBoard]] of rounds.entries()) {
        if (
          round === filterRound &&
          (filterBoard === undefined || board === filterBoard)
        ) {
          groups[i].push(pgn);
          break;
        }
      }
    } else {
      groups[0].push(pgn);
    }
  }

  if (sliceQuery) {
    if (!Array.isArray(sliceQuery)) sliceQuery = [sliceQuery];
    for (const i in groups) {
      if (!sliceQuery[i]) continue;
      const group: string[][] = [];
      for (const part of sliceQuery[i].split(',')) {
        const [from, to] = part.split('-').map((x: string) => parseInt(x));
        group.push(groups[i].slice(from - 1, to ?? from));
      }
      groups[i] = Array.prototype.concat(...group);
    }
  }

  return Array.prototype.concat(...groups);
}

const parseRoundsQuery = (
  query?: string | string[],
): number[][] | undefined => {
  if (!query) return undefined;
  if (!Array.isArray(query)) query = [query];
  return query.map(r => r.split('.').map(x => parseInt(x)));
};

const markdownTableRow = (row: string[]) => `| ${row.join(' | ')} |`;

export const markdownTable = (rows: string[][]) =>
  [
    markdownTableRow(rows[0]),
    markdownTableRow(rows[0].map(_ => '---')),
    ...rows.slice(1).map(markdownTableRow),
  ].join('\n');

export const markdownPre = (s: string) => '`' + s + '`';

export const regexEscape = (s: string) =>
  s.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');

export const sleep = promisify(setTimeout);

export async function fetchJson<T>(
  urlOrParams:
    | string
    | {
        uri: string;
        method?: 'GET' | 'POST';
        body?: string;
        gzip?: boolean;
        headers?: { [key: string]: string };
      },
): Promise<T> {
  const url = typeof urlOrParams === 'string' ? urlOrParams : urlOrParams.uri;
  const params = {
    ...(typeof urlOrParams === 'string' ? { uri: urlOrParams } : urlOrParams),
    timeout: sourceHttpTimeout,
  };
  return new Promise<T>((resolve, reject) => {
    request(params, (err, res, body) => {
      if (!body || err || res.statusCode !== 200) {
        reject(`ERROR ${res.statusCode} fetching ${url} err:${err}`);
        return;
      }

      try {
        resolve(JSON.parse(body));
      } catch (e) {
        reject(`ERROR parsing JSON from ${url}: ${e}`);
      }
    });
  });
}

export const positionToFen = (position: number): string | undefined => {
  const rank8 = positions[position];
  if (rank8) {
    return `${rank8}/pppppppp/8/8/8/8/PPPPPPPP/${rank8.toUpperCase()} w KQkq - 0 1`;
  }
};

const positions = [
  'bbqnnrkr',
  'bqnbnrkr',
  'bqnnrbkr',
  'bqnnrkrb',
  'qbbnnrkr',
  'qnbbnrkr',
  'qnbnrbkr',
  'qnbnrkrb',
  'qbnnbrkr',
  'qnnbbrkr',
  'qnnrbbkr',
  'qnnrbkrb',
  'qbnnrkbr',
  'qnnbrkbr',
  'qnnrkbbr',
  'qnnrkrbb',
  'bbnqnrkr',
  'bnqbnrkr',
  'bnqnrbkr',
  'bnqnrkrb',
  'nbbqnrkr',
  'nqbbnrkr',
  'nqbnrbkr',
  'nqbnrkrb',
  'nbqnbrkr',
  'nqnbbrkr',
  'nqnrbbkr',
  'nqnrbkrb',
  'nbqnrkbr',
  'nqnbrkbr',
  'nqnrkbbr',
  'nqnrkrbb',
  'bbnnqrkr',
  'bnnbqrkr',
  'bnnqrbkr',
  'bnnqrkrb',
  'nbbnqrkr',
  'nnbbqrkr',
  'nnbqrbkr',
  'nnbqrkrb',
  'nbnqbrkr',
  'nnqbbrkr',
  'nnqrbbkr',
  'nnqrbkrb',
  'nbnqrkbr',
  'nnqbrkbr',
  'nnqrkbbr',
  'nnqrkrbb',
  'bbnnrqkr',
  'bnnbrqkr',
  'bnnrqbkr',
  'bnnrqkrb',
  'nbbnrqkr',
  'nnbbrqkr',
  'nnbrqbkr',
  'nnbrqkrb',
  'nbnrbqkr',
  'nnrbbqkr',
  'nnrqbbkr',
  'nnrqbkrb',
  'nbnrqkbr',
  'nnrbqkbr',
  'nnrqkbbr',
  'nnrqkrbb',
  'bbnnrkqr',
  'bnnbrkqr',
  'bnnrkbqr',
  'bnnrkqrb',
  'nbbnrkqr',
  'nnbbrkqr',
  'nnbrkbqr',
  'nnbrkqrb',
  'nbnrbkqr',
  'nnrbbkqr',
  'nnrkbbqr',
  'nnrkbqrb',
  'nbnrkqbr',
  'nnrbkqbr',
  'nnrkqbbr',
  'nnrkqrbb',
  'bbnnrkrq',
  'bnnbrkrq',
  'bnnrkbrq',
  'bnnrkrqb',
  'nbbnrkrq',
  'nnbbrkrq',
  'nnbrkbrq',
  'nnbrkrqb',
  'nbnrbkrq',
  'nnrbbkrq',
  'nnrkbbrq',
  'nnrkbrqb',
  'nbnrkrbq',
  'nnrbkrbq',
  'nnrkrbbq',
  'nnrkrqbb',
  'bbqnrnkr',
  'bqnbrnkr',
  'bqnrnbkr',
  'bqnrnkrb',
  'qbbnrnkr',
  'qnbbrnkr',
  'qnbrnbkr',
  'qnbrnkrb',
  'qbnrbnkr',
  'qnrbbnkr',
  'qnrnbbkr',
  'qnrnbkrb',
  'qbnrnkbr',
  'qnrbnkbr',
  'qnrnkbbr',
  'qnrnkrbb',
  'bbnqrnkr',
  'bnqbrnkr',
  'bnqrnbkr',
  'bnqrnkrb',
  'nbbqrnkr',
  'nqbbrnkr',
  'nqbrnbkr',
  'nqbrnkrb',
  'nbqrbnkr',
  'nqrbbnkr',
  'nqrnbbkr',
  'nqrnbkrb',
  'nbqrnkbr',
  'nqrbnkbr',
  'nqrnkbbr',
  'nqrnkrbb',
  'bbnrqnkr',
  'bnrbqnkr',
  'bnrqnbkr',
  'bnrqnkrb',
  'nbbrqnkr',
  'nrbbqnkr',
  'nrbqnbkr',
  'nrbqnkrb',
  'nbrqbnkr',
  'nrqbbnkr',
  'nrqnbbkr',
  'nrqnbkrb',
  'nbrqnkbr',
  'nrqbnkbr',
  'nrqnkbbr',
  'nrqnkrbb',
  'bbnrnqkr',
  'bnrbnqkr',
  'bnrnqbkr',
  'bnrnqkrb',
  'nbbrnqkr',
  'nrbbnqkr',
  'nrbnqbkr',
  'nrbnqkrb',
  'nbrnbqkr',
  'nrnbbqkr',
  'nrnqbbkr',
  'nrnqbkrb',
  'nbrnqkbr',
  'nrnbqkbr',
  'nrnqkbbr',
  'nrnqkrbb',
  'bbnrnkqr',
  'bnrbnkqr',
  'bnrnkbqr',
  'bnrnkqrb',
  'nbbrnkqr',
  'nrbbnkqr',
  'nrbnkbqr',
  'nrbnkqrb',
  'nbrnbkqr',
  'nrnbbkqr',
  'nrnkbbqr',
  'nrnkbqrb',
  'nbrnkqbr',
  'nrnbkqbr',
  'nrnkqbbr',
  'nrnkqrbb',
  'bbnrnkrq',
  'bnrbnkrq',
  'bnrnkbrq',
  'bnrnkrqb',
  'nbbrnkrq',
  'nrbbnkrq',
  'nrbnkbrq',
  'nrbnkrqb',
  'nbrnbkrq',
  'nrnbbkrq',
  'nrnkbbrq',
  'nrnkbrqb',
  'nbrnkrbq',
  'nrnbkrbq',
  'nrnkrbbq',
  'nrnkrqbb',
  'bbqnrknr',
  'bqnbrknr',
  'bqnrkbnr',
  'bqnrknrb',
  'qbbnrknr',
  'qnbbrknr',
  'qnbrkbnr',
  'qnbrknrb',
  'qbnrbknr',
  'qnrbbknr',
  'qnrkbbnr',
  'qnrkbnrb',
  'qbnrknbr',
  'qnrbknbr',
  'qnrknbbr',
  'qnrknrbb',
  'bbnqrknr',
  'bnqbrknr',
  'bnqrkbnr',
  'bnqrknrb',
  'nbbqrknr',
  'nqbbrknr',
  'nqbrkbnr',
  'nqbrknrb',
  'nbqrbknr',
  'nqrbbknr',
  'nqrkbbnr',
  'nqrkbnrb',
  'nbqrknbr',
  'nqrbknbr',
  'nqrknbbr',
  'nqrknrbb',
  'bbnrqknr',
  'bnrbqknr',
  'bnrqkbnr',
  'bnrqknrb',
  'nbbrqknr',
  'nrbbqknr',
  'nrbqkbnr',
  'nrbqknrb',
  'nbrqbknr',
  'nrqbbknr',
  'nrqkbbnr',
  'nrqkbnrb',
  'nbrqknbr',
  'nrqbknbr',
  'nrqknbbr',
  'nrqknrbb',
  'bbnrkqnr',
  'bnrbkqnr',
  'bnrkqbnr',
  'bnrkqnrb',
  'nbbrkqnr',
  'nrbbkqnr',
  'nrbkqbnr',
  'nrbkqnrb',
  'nbrkbqnr',
  'nrkbbqnr',
  'nrkqbbnr',
  'nrkqbnrb',
  'nbrkqnbr',
  'nrkbqnbr',
  'nrkqnbbr',
  'nrkqnrbb',
  'bbnrknqr',
  'bnrbknqr',
  'bnrknbqr',
  'bnrknqrb',
  'nbbrknqr',
  'nrbbknqr',
  'nrbknbqr',
  'nrbknqrb',
  'nbrkbnqr',
  'nrkbbnqr',
  'nrknbbqr',
  'nrknbqrb',
  'nbrknqbr',
  'nrkbnqbr',
  'nrknqbbr',
  'nrknqrbb',
  'bbnrknrq',
  'bnrbknrq',
  'bnrknbrq',
  'bnrknrqb',
  'nbbrknrq',
  'nrbbknrq',
  'nrbknbrq',
  'nrbknrqb',
  'nbrkbnrq',
  'nrkbbnrq',
  'nrknbbrq',
  'nrknbrqb',
  'nbrknrbq',
  'nrkbnrbq',
  'nrknrbbq',
  'nrknrqbb',
  'bbqnrkrn',
  'bqnbrkrn',
  'bqnrkbrn',
  'bqnrkrnb',
  'qbbnrkrn',
  'qnbbrkrn',
  'qnbrkbrn',
  'qnbrkrnb',
  'qbnrbkrn',
  'qnrbbkrn',
  'qnrkbbrn',
  'qnrkbrnb',
  'qbnrkrbn',
  'qnrbkrbn',
  'qnrkrbbn',
  'qnrkrnbb',
  'bbnqrkrn',
  'bnqbrkrn',
  'bnqrkbrn',
  'bnqrkrnb',
  'nbbqrkrn',
  'nqbbrkrn',
  'nqbrkbrn',
  'nqbrkrnb',
  'nbqrbkrn',
  'nqrbbkrn',
  'nqrkbbrn',
  'nqrkbrnb',
  'nbqrkrbn',
  'nqrbkrbn',
  'nqrkrbbn',
  'nqrkrnbb',
  'bbnrqkrn',
  'bnrbqkrn',
  'bnrqkbrn',
  'bnrqkrnb',
  'nbbrqkrn',
  'nrbbqkrn',
  'nrbqkbrn',
  'nrbqkrnb',
  'nbrqbkrn',
  'nrqbbkrn',
  'nrqkbbrn',
  'nrqkbrnb',
  'nbrqkrbn',
  'nrqbkrbn',
  'nrqkrbbn',
  'nrqkrnbb',
  'bbnrkqrn',
  'bnrbkqrn',
  'bnrkqbrn',
  'bnrkqrnb',
  'nbbrkqrn',
  'nrbbkqrn',
  'nrbkqbrn',
  'nrbkqrnb',
  'nbrkbqrn',
  'nrkbbqrn',
  'nrkqbbrn',
  'nrkqbrnb',
  'nbrkqrbn',
  'nrkbqrbn',
  'nrkqrbbn',
  'nrkqrnbb',
  'bbnrkrqn',
  'bnrbkrqn',
  'bnrkrbqn',
  'bnrkrqnb',
  'nbbrkrqn',
  'nrbbkrqn',
  'nrbkrbqn',
  'nrbkrqnb',
  'nbrkbrqn',
  'nrkbbrqn',
  'nrkrbbqn',
  'nrkrbqnb',
  'nbrkrqbn',
  'nrkbrqbn',
  'nrkrqbbn',
  'nrkrqnbb',
  'bbnrkrnq',
  'bnrbkrnq',
  'bnrkrbnq',
  'bnrkrnqb',
  'nbbrkrnq',
  'nrbbkrnq',
  'nrbkrbnq',
  'nrbkrnqb',
  'nbrkbrnq',
  'nrkbbrnq',
  'nrkrbbnq',
  'nrkrbnqb',
  'nbrkrnbq',
  'nrkbrnbq',
  'nrkrnbbq',
  'nrkrnqbb',
  'bbqrnnkr',
  'bqrbnnkr',
  'bqrnnbkr',
  'bqrnnkrb',
  'qbbrnnkr',
  'qrbbnnkr',
  'qrbnnbkr',
  'qrbnnkrb',
  'qbrnbnkr',
  'qrnbbnkr',
  'qrnnbbkr',
  'qrnnbkrb',
  'qbrnnkbr',
  'qrnbnkbr',
  'qrnnkbbr',
  'qrnnkrbb',
  'bbrqnnkr',
  'brqbnnkr',
  'brqnnbkr',
  'brqnnkrb',
  'rbbqnnkr',
  'rqbbnnkr',
  'rqbnnbkr',
  'rqbnnkrb',
  'rbqnbnkr',
  'rqnbbnkr',
  'rqnnbbkr',
  'rqnnbkrb',
  'rbqnnkbr',
  'rqnbnkbr',
  'rqnnkbbr',
  'rqnnkrbb',
  'bbrnqnkr',
  'brnbqnkr',
  'brnqnbkr',
  'brnqnkrb',
  'rbbnqnkr',
  'rnbbqnkr',
  'rnbqnbkr',
  'rnbqnkrb',
  'rbnqbnkr',
  'rnqbbnkr',
  'rnqnbbkr',
  'rnqnbkrb',
  'rbnqnkbr',
  'rnqbnkbr',
  'rnqnkbbr',
  'rnqnkrbb',
  'bbrnnqkr',
  'brnbnqkr',
  'brnnqbkr',
  'brnnqkrb',
  'rbbnnqkr',
  'rnbbnqkr',
  'rnbnqbkr',
  'rnbnqkrb',
  'rbnnbqkr',
  'rnnbbqkr',
  'rnnqbbkr',
  'rnnqbkrb',
  'rbnnqkbr',
  'rnnbqkbr',
  'rnnqkbbr',
  'rnnqkrbb',
  'bbrnnkqr',
  'brnbnkqr',
  'brnnkbqr',
  'brnnkqrb',
  'rbbnnkqr',
  'rnbbnkqr',
  'rnbnkbqr',
  'rnbnkqrb',
  'rbnnbkqr',
  'rnnbbkqr',
  'rnnkbbqr',
  'rnnkbqrb',
  'rbnnkqbr',
  'rnnbkqbr',
  'rnnkqbbr',
  'rnnkqrbb',
  'bbrnnkrq',
  'brnbnkrq',
  'brnnkbrq',
  'brnnkrqb',
  'rbbnnkrq',
  'rnbbnkrq',
  'rnbnkbrq',
  'rnbnkrqb',
  'rbnnbkrq',
  'rnnbbkrq',
  'rnnkbbrq',
  'rnnkbrqb',
  'rbnnkrbq',
  'rnnbkrbq',
  'rnnkrbbq',
  'rnnkrqbb',
  'bbqrnknr',
  'bqrbnknr',
  'bqrnkbnr',
  'bqrnknrb',
  'qbbrnknr',
  'qrbbnknr',
  'qrbnkbnr',
  'qrbnknrb',
  'qbrnbknr',
  'qrnbbknr',
  'qrnkbbnr',
  'qrnkbnrb',
  'qbrnknbr',
  'qrnbknbr',
  'qrnknbbr',
  'qrnknrbb',
  'bbrqnknr',
  'brqbnknr',
  'brqnkbnr',
  'brqnknrb',
  'rbbqnknr',
  'rqbbnknr',
  'rqbnkbnr',
  'rqbnknrb',
  'rbqnbknr',
  'rqnbbknr',
  'rqnkbbnr',
  'rqnkbnrb',
  'rbqnknbr',
  'rqnbknbr',
  'rqnknbbr',
  'rqnknrbb',
  'bbrnqknr',
  'brnbqknr',
  'brnqkbnr',
  'brnqknrb',
  'rbbnqknr',
  'rnbbqknr',
  'rnbqkbnr',
  'rnbqknrb',
  'rbnqbknr',
  'rnqbbknr',
  'rnqkbbnr',
  'rnqkbnrb',
  'rbnqknbr',
  'rnqbknbr',
  'rnqknbbr',
  'rnqknrbb',
  'bbrnkqnr',
  'brnbkqnr',
  'brnkqbnr',
  'brnkqnrb',
  'rbbnkqnr',
  'rnbbkqnr',
  'rnbkqbnr',
  'rnbkqnrb',
  'rbnkbqnr',
  'rnkbbqnr',
  'rnkqbbnr',
  'rnkqbnrb',
  'rbnkqnbr',
  'rnkbqnbr',
  'rnkqnbbr',
  'rnkqnrbb',
  'bbrnknqr',
  'brnbknqr',
  'brnknbqr',
  'brnknqrb',
  'rbbnknqr',
  'rnbbknqr',
  'rnbknbqr',
  'rnbknqrb',
  'rbnkbnqr',
  'rnkbbnqr',
  'rnknbbqr',
  'rnknbqrb',
  'rbnknqbr',
  'rnkbnqbr',
  'rnknqbbr',
  'rnknqrbb',
  'bbrnknrq',
  'brnbknrq',
  'brnknbrq',
  'brnknrqb',
  'rbbnknrq',
  'rnbbknrq',
  'rnbknbrq',
  'rnbknrqb',
  'rbnkbnrq',
  'rnkbbnrq',
  'rnknbbrq',
  'rnknbrqb',
  'rbnknrbq',
  'rnkbnrbq',
  'rnknrbbq',
  'rnknrqbb',
  'bbqrnkrn',
  'bqrbnkrn',
  'bqrnkbrn',
  'bqrnkrnb',
  'qbbrnkrn',
  'qrbbnkrn',
  'qrbnkbrn',
  'qrbnkrnb',
  'qbrnbkrn',
  'qrnbbkrn',
  'qrnkbbrn',
  'qrnkbrnb',
  'qbrnkrbn',
  'qrnbkrbn',
  'qrnkrbbn',
  'qrnkrnbb',
  'bbrqnkrn',
  'brqbnkrn',
  'brqnkbrn',
  'brqnkrnb',
  'rbbqnkrn',
  'rqbbnkrn',
  'rqbnkbrn',
  'rqbnkrnb',
  'rbqnbkrn',
  'rqnbbkrn',
  'rqnkbbrn',
  'rqnkbrnb',
  'rbqnkrbn',
  'rqnbkrbn',
  'rqnkrbbn',
  'rqnkrnbb',
  'bbrnqkrn',
  'brnbqkrn',
  'brnqkbrn',
  'brnqkrnb',
  'rbbnqkrn',
  'rnbbqkrn',
  'rnbqkbrn',
  'rnbqkrnb',
  'rbnqbkrn',
  'rnqbbkrn',
  'rnqkbbrn',
  'rnqkbrnb',
  'rbnqkrbn',
  'rnqbkrbn',
  'rnqkrbbn',
  'rnqkrnbb',
  'bbrnkqrn',
  'brnbkqrn',
  'brnkqbrn',
  'brnkqrnb',
  'rbbnkqrn',
  'rnbbkqrn',
  'rnbkqbrn',
  'rnbkqrnb',
  'rbnkbqrn',
  'rnkbbqrn',
  'rnkqbbrn',
  'rnkqbrnb',
  'rbnkqrbn',
  'rnkbqrbn',
  'rnkqrbbn',
  'rnkqrnbb',
  'bbrnkrqn',
  'brnbkrqn',
  'brnkrbqn',
  'brnkrqnb',
  'rbbnkrqn',
  'rnbbkrqn',
  'rnbkrbqn',
  'rnbkrqnb',
  'rbnkbrqn',
  'rnkbbrqn',
  'rnkrbbqn',
  'rnkrbqnb',
  'rbnkrqbn',
  'rnkbrqbn',
  'rnkrqbbn',
  'rnkrqnbb',
  'bbrnkrnq',
  'brnbkrnq',
  'brnkrbnq',
  'brnkrnqb',
  'rbbnkrnq',
  'rnbbkrnq',
  'rnbkrbnq',
  'rnbkrnqb',
  'rbnkbrnq',
  'rnkbbrnq',
  'rnkrbbnq',
  'rnkrbnqb',
  'rbnkrnbq',
  'rnkbrnbq',
  'rnkrnbbq',
  'rnkrnqbb',
  'bbqrknnr',
  'bqrbknnr',
  'bqrknbnr',
  'bqrknnrb',
  'qbbrknnr',
  'qrbbknnr',
  'qrbknbnr',
  'qrbknnrb',
  'qbrkbnnr',
  'qrkbbnnr',
  'qrknbbnr',
  'qrknbnrb',
  'qbrknnbr',
  'qrkbnnbr',
  'qrknnbbr',
  'qrknnrbb',
  'bbrqknnr',
  'brqbknnr',
  'brqknbnr',
  'brqknnrb',
  'rbbqknnr',
  'rqbbknnr',
  'rqbknbnr',
  'rqbknnrb',
  'rbqkbnnr',
  'rqkbbnnr',
  'rqknbbnr',
  'rqknbnrb',
  'rbqknnbr',
  'rqkbnnbr',
  'rqknnbbr',
  'rqknnrbb',
  'bbrkqnnr',
  'brkbqnnr',
  'brkqnbnr',
  'brkqnnrb',
  'rbbkqnnr',
  'rkbbqnnr',
  'rkbqnbnr',
  'rkbqnnrb',
  'rbkqbnnr',
  'rkqbbnnr',
  'rkqnbbnr',
  'rkqnbnrb',
  'rbkqnnbr',
  'rkqbnnbr',
  'rkqnnbbr',
  'rkqnnrbb',
  'bbrknqnr',
  'brkbnqnr',
  'brknqbnr',
  'brknqnrb',
  'rbbknqnr',
  'rkbbnqnr',
  'rkbnqbnr',
  'rkbnqnrb',
  'rbknbqnr',
  'rknbbqnr',
  'rknqbbnr',
  'rknqbnrb',
  'rbknqnbr',
  'rknbqnbr',
  'rknqnbbr',
  'rknqnrbb',
  'bbrknnqr',
  'brkbnnqr',
  'brknnbqr',
  'brknnqrb',
  'rbbknnqr',
  'rkbbnnqr',
  'rkbnnbqr',
  'rkbnnqrb',
  'rbknbnqr',
  'rknbbnqr',
  'rknnbbqr',
  'rknnbqrb',
  'rbknnqbr',
  'rknbnqbr',
  'rknnqbbr',
  'rknnqrbb',
  'bbrknnrq',
  'brkbnnrq',
  'brknnbrq',
  'brknnrqb',
  'rbbknnrq',
  'rkbbnnrq',
  'rkbnnbrq',
  'rkbnnrqb',
  'rbknbnrq',
  'rknbbnrq',
  'rknnbbrq',
  'rknnbrqb',
  'rbknnrbq',
  'rknbnrbq',
  'rknnrbbq',
  'rknnrqbb',
  'bbqrknrn',
  'bqrbknrn',
  'bqrknbrn',
  'bqrknrnb',
  'qbbrknrn',
  'qrbbknrn',
  'qrbknbrn',
  'qrbknrnb',
  'qbrkbnrn',
  'qrkbbnrn',
  'qrknbbrn',
  'qrknbrnb',
  'qbrknrbn',
  'qrkbnrbn',
  'qrknrbbn',
  'qrknrnbb',
  'bbrqknrn',
  'brqbknrn',
  'brqknbrn',
  'brqknrnb',
  'rbbqknrn',
  'rqbbknrn',
  'rqbknbrn',
  'rqbknrnb',
  'rbqkbnrn',
  'rqkbbnrn',
  'rqknbbrn',
  'rqknbrnb',
  'rbqknrbn',
  'rqkbnrbn',
  'rqknrbbn',
  'rqknrnbb',
  'bbrkqnrn',
  'brkbqnrn',
  'brkqnbrn',
  'brkqnrnb',
  'rbbkqnrn',
  'rkbbqnrn',
  'rkbqnbrn',
  'rkbqnrnb',
  'rbkqbnrn',
  'rkqbbnrn',
  'rkqnbbrn',
  'rkqnbrnb',
  'rbkqnrbn',
  'rkqbnrbn',
  'rkqnrbbn',
  'rkqnrnbb',
  'bbrknqrn',
  'brkbnqrn',
  'brknqbrn',
  'brknqrnb',
  'rbbknqrn',
  'rkbbnqrn',
  'rkbnqbrn',
  'rkbnqrnb',
  'rbknbqrn',
  'rknbbqrn',
  'rknqbbrn',
  'rknqbrnb',
  'rbknqrbn',
  'rknbqrbn',
  'rknqrbbn',
  'rknqrnbb',
  'bbrknrqn',
  'brkbnrqn',
  'brknrbqn',
  'brknrqnb',
  'rbbknrqn',
  'rkbbnrqn',
  'rkbnrbqn',
  'rkbnrqnb',
  'rbknbrqn',
  'rknbbrqn',
  'rknrbbqn',
  'rknrbqnb',
  'rbknrqbn',
  'rknbrqbn',
  'rknrqbbn',
  'rknrqnbb',
  'bbrknrnq',
  'brkbnrnq',
  'brknrbnq',
  'brknrnqb',
  'rbbknrnq',
  'rkbbnrnq',
  'rkbnrbnq',
  'rkbnrnqb',
  'rbknbrnq',
  'rknbbrnq',
  'rknrbbnq',
  'rknrbnqb',
  'rbknrnbq',
  'rknbrnbq',
  'rknrnbbq',
  'rknrnqbb',
  'bbqrkrnn',
  'bqrbkrnn',
  'bqrkrbnn',
  'bqrkrnnb',
  'qbbrkrnn',
  'qrbbkrnn',
  'qrbkrbnn',
  'qrbkrnnb',
  'qbrkbrnn',
  'qrkbbrnn',
  'qrkrbbnn',
  'qrkrbnnb',
  'qbrkrnbn',
  'qrkbrnbn',
  'qrkrnbbn',
  'qrkrnnbb',
  'bbrqkrnn',
  'brqbkrnn',
  'brqkrbnn',
  'brqkrnnb',
  'rbbqkrnn',
  'rqbbkrnn',
  'rqbkrbnn',
  'rqbkrnnb',
  'rbqkbrnn',
  'rqkbbrnn',
  'rqkrbbnn',
  'rqkrbnnb',
  'rbqkrnbn',
  'rqkbrnbn',
  'rqkrnbbn',
  'rqkrnnbb',
  'bbrkqrnn',
  'brkbqrnn',
  'brkqrbnn',
  'brkqrnnb',
  'rbbkqrnn',
  'rkbbqrnn',
  'rkbqrbnn',
  'rkbqrnnb',
  'rbkqbrnn',
  'rkqbbrnn',
  'rkqrbbnn',
  'rkqrbnnb',
  'rbkqrnbn',
  'rkqbrnbn',
  'rkqrnbbn',
  'rkqrnnbb',
  'bbrkrqnn',
  'brkbrqnn',
  'brkrqbnn',
  'brkrqnnb',
  'rbbkrqnn',
  'rkbbrqnn',
  'rkbrqbnn',
  'rkbrqnnb',
  'rbkrbqnn',
  'rkrbbqnn',
  'rkrqbbnn',
  'rkrqbnnb',
  'rbkrqnbn',
  'rkrbqnbn',
  'rkrqnbbn',
  'rkrqnnbb',
  'bbrkrnqn',
  'brkbrnqn',
  'brkrnbqn',
  'brkrnqnb',
  'rbbkrnqn',
  'rkbbrnqn',
  'rkbrnbqn',
  'rkbrnqnb',
  'rbkrbnqn',
  'rkrbbnqn',
  'rkrnbbqn',
  'rkrnbqnb',
  'rbkrnqbn',
  'rkrbnqbn',
  'rkrnqbbn',
  'rkrnqnbb',
  'bbrkrnnq',
  'brkbrnnq',
  'brkrnbnq',
  'brkrnnqb',
  'rbbkrnnq',
  'rkbbrnnq',
  'rkbrnbnq',
  'rkbrnnqb',
  'rbkrbnnq',
  'rkrbbnnq',
  'rkrnbbnq',
  'rkrnbnqb',
  'rbkrnnbq',
  'rkrbnnbq',
  'rkrnnbbq',
  'rkrnnqbb',
];
